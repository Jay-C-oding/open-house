{"ast":null,"code":"import _slicedToArray from\"/Users/chojayoung/Desktop/react.ts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from'react';import{Slide}from'react-awesome-reveal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TimeUntil=function TimeUntil(){var _useState=useState({days:'0',hours:'0',minutes:'0',seconds:'0'}),_useState2=_slicedToArray(_useState,2),time=_useState2[0],setTime=_useState2[1];var renderItem=function renderItem(time,value){return/*#__PURE__*/_jsxs(\"div\",{className:\"countdown_item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"countdown_time\",children:time}),/*#__PURE__*/_jsx(\"div\",{className:\"countdown_tag\",children:value})]});};var getTimeUntil=useCallback(function(deadline){var time=Date.parse(deadline)-Date.parse(new Date());if(time<0){console.log('date passed');}else{var seconds=Math.floor(time/1000%60);var minutes=Math.floor(time/1000/60%60);var hours=Math.floor(time/(1000*60*60)%24);var days=Math.floor(time/(1000*60*60*24));setTime({days:days,hours:hours,minutes:minutes,seconds:seconds});}},[]);useEffect(function(){setInterval(function(){return getTimeUntil('Oct, 27, 2021, 16:30:00');},1000);},[getTimeUntil]);return/*#__PURE__*/_jsx(Slide,{left:true,delay:1000,children:/*#__PURE__*/_jsxs(\"div\",{className:\"countdown_wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"countdown_top\",children:\"Event starts in\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"countdown_bottom\",children:[renderItem(time.days,'Days'),renderItem(time.hours,'Hrs'),renderItem(time.minutes,'Min'),renderItem(time.seconds,'Sec')]})]})});};export default TimeUntil;","map":{"version":3,"sources":["/Users/chojayoung/Desktop/react.ts/src/components/featured/timeUntil.js"],"names":["React","useState","useEffect","useCallback","Slide","TimeUntil","days","hours","minutes","seconds","time","setTime","renderItem","value","getTimeUntil","deadline","Date","parse","console","log","Math","floor","setInterval"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,WAArC,KAAwD,OAAxD,CACA,OAASC,KAAT,KAAsB,sBAAtB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,cAAwBJ,QAAQ,CAAC,CAC/BK,IAAI,CAAE,GADyB,CAE/BC,KAAK,CAAE,GAFwB,CAG/BC,OAAO,CAAE,GAHsB,CAI/BC,OAAO,CAAE,GAJsB,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAOA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACF,IAAD,CAAOG,KAAP,qBACjB,aAAK,SAAS,CAAC,gBAAf,wBACE,YAAK,SAAS,CAAC,gBAAf,UAAiCH,IAAjC,EADF,cAEE,YAAK,SAAS,CAAC,eAAf,UAAgCG,KAAhC,EAFF,GADiB,EAAnB,CAMA,GAAMC,CAAAA,YAAY,CAAGX,WAAW,CAAC,SAACY,QAAD,CAAc,CAC7C,GAAML,CAAAA,IAAI,CAAGM,IAAI,CAACC,KAAL,CAAWF,QAAX,EAAuBC,IAAI,CAACC,KAAL,CAAW,GAAID,CAAAA,IAAJ,EAAX,CAApC,CACA,GAAIN,IAAI,CAAG,CAAX,CAAc,CACZQ,OAAO,CAACC,GAAR,CAAY,aAAZ,EACD,CAFD,IAEO,CACL,GAAMV,CAAAA,OAAO,CAAGW,IAAI,CAACC,KAAL,CAAYX,IAAI,CAAG,IAAR,CAAgB,EAA3B,CAAhB,CACA,GAAMF,CAAAA,OAAO,CAAGY,IAAI,CAACC,KAAL,CAAYX,IAAI,CAAG,IAAP,CAAc,EAAf,CAAqB,EAAhC,CAAhB,CACA,GAAMH,CAAAA,KAAK,CAAGa,IAAI,CAACC,KAAL,CAAYX,IAAI,EAAI,KAAO,EAAP,CAAY,EAAhB,CAAL,CAA4B,EAAvC,CAAd,CACA,GAAMJ,CAAAA,IAAI,CAAGc,IAAI,CAACC,KAAL,CAAWX,IAAI,EAAI,KAAO,EAAP,CAAY,EAAZ,CAAiB,EAArB,CAAf,CAAb,CAEAC,OAAO,CAAC,CACNL,IAAI,CAAJA,IADM,CAENC,KAAK,CAALA,KAFM,CAGNC,OAAO,CAAPA,OAHM,CAINC,OAAO,CAAPA,OAJM,CAAD,CAAP,CAMD,CACF,CAjB+B,CAiB7B,EAjB6B,CAAhC,CAmBAP,SAAS,CAAC,UAAM,CACdoB,WAAW,CAAC,iBAAMR,CAAAA,YAAY,CAAC,yBAAD,CAAlB,EAAD,CAAgD,IAAhD,CAAX,CACD,CAFQ,CAEN,CAACA,YAAD,CAFM,CAAT,CAIA,mBACE,KAAC,KAAD,EAAO,IAAI,KAAX,CAAY,KAAK,CAAE,IAAnB,uBACE,aAAK,SAAS,CAAC,mBAAf,wBACE,YAAK,SAAS,CAAC,eAAf,6BADF,cAEE,aAAK,SAAS,CAAC,kBAAf,WACGF,UAAU,CAACF,IAAI,CAACJ,IAAN,CAAY,MAAZ,CADb,CAEGM,UAAU,CAACF,IAAI,CAACH,KAAN,CAAa,KAAb,CAFb,CAGGK,UAAU,CAACF,IAAI,CAACF,OAAN,CAAe,KAAf,CAHb,CAIGI,UAAU,CAACF,IAAI,CAACD,OAAN,CAAe,KAAf,CAJb,GAFF,GADF,EADF,CAaD,CAlDD,CAoDA,cAAeJ,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Slide } from 'react-awesome-reveal';\n\nconst TimeUntil = () => {\n  const [time, setTime] = useState({\n    days: '0',\n    hours: '0',\n    minutes: '0',\n    seconds: '0',\n  });\n\n  const renderItem = (time, value) => (\n    <div className='countdown_item'>\n      <div className='countdown_time'>{time}</div>\n      <div className='countdown_tag'>{value}</div>\n    </div>\n  );\n  const getTimeUntil = useCallback((deadline) => {\n    const time = Date.parse(deadline) - Date.parse(new Date());\n    if (time < 0) {\n      console.log('date passed');\n    } else {\n      const seconds = Math.floor((time / 1000) % 60);\n      const minutes = Math.floor((time / 1000 / 60) % 60);\n      const hours = Math.floor((time / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(time / (1000 * 60 * 60 * 24));\n\n      setTime({\n        days,\n        hours,\n        minutes,\n        seconds,\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    setInterval(() => getTimeUntil('Oct, 27, 2021, 16:30:00'), 1000);\n  }, [getTimeUntil]);\n\n  return (\n    <Slide left delay={1000}>\n      <div className='countdown_wrapper'>\n        <div className='countdown_top'>Event starts in</div>\n        <div className='countdown_bottom'>\n          {renderItem(time.days, 'Days')}\n          {renderItem(time.hours, 'Hrs')}\n          {renderItem(time.minutes, 'Min')}\n          {renderItem(time.seconds, 'Sec')}\n        </div>\n      </div>\n    </Slide>\n  );\n};\n\nexport default TimeUntil;\n"]},"metadata":{},"sourceType":"module"}