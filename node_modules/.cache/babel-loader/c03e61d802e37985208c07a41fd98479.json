{"ast":null,"code":"var _jsxFileName = \"/Users/chojayoung/Desktop/react.ts/venue/src/components/featured/timeUntil.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Slide } from 'react-awesome-reveal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeUntil = () => {\n  _s();\n\n  const [time, setTime] = useState({\n    days: '0',\n    hours: '0',\n    minutes: '0',\n    seconds: '0'\n  });\n\n  const renderItem = (time, value) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countdown_item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown_time\",\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown_tag\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n\n  const getTimeUntil = useCallback(deadline => {\n    const time = Date.parse(deadline) - Date.parse(new Date());\n\n    if (time < 0) {\n      console.log('date passed');\n    } else {\n      const seconds = Math.floor(time / 1000 % 60);\n      const minutes = Math.floor(time / 1000 / 60 % 60);\n      const hours = Math.floor(time / (1000 * 60 * 60) % 24);\n      const days = Math.floor(time / (1000 * 60 * 60 * 24));\n      setTime({\n        days,\n        hours,\n        minutes,\n        seconds\n      });\n    }\n  }, []);\n  useEffect(() => {\n    setInterval(() => getTimeUntil('Oct, 27, 2022, 16:00:00'), 1000);\n  }, [getTimeUntil]);\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    left: true,\n    delay: 1000,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown_top\",\n        children: \"Event starts in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown_bottom\",\n        children: [renderItem(time.days, 'Days'), renderItem(time.hours, 'Hrs'), renderItem(time.minutes, 'Min'), renderItem(time.seconds, 'Sec')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TimeUntil, \"NwQKMsXATClt9vltyXodVYjXg5s=\");\n\n_c = TimeUntil;\nexport default TimeUntil;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeUntil\");","map":{"version":3,"sources":["/Users/chojayoung/Desktop/react.ts/venue/src/components/featured/timeUntil.js"],"names":["React","useState","useEffect","useCallback","Slide","TimeUntil","time","setTime","days","hours","minutes","seconds","renderItem","value","getTimeUntil","deadline","Date","parse","console","log","Math","floor","setInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,KAAT,QAAsB,sBAAtB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAC/BO,IAAAA,IAAI,EAAE,GADyB;AAE/BC,IAAAA,KAAK,EAAE,GAFwB;AAG/BC,IAAAA,OAAO,EAAE,GAHsB;AAI/BC,IAAAA,OAAO,EAAE;AAJsB,GAAD,CAAhC;;AAOA,QAAMC,UAAU,GAAG,CAACN,IAAD,EAAOO,KAAP,kBACjB;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAAiCP;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAAgCO;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAMA,QAAMC,YAAY,GAAGX,WAAW,CAAEY,QAAD,IAAc;AAC7C,UAAMT,IAAI,GAAGU,IAAI,CAACC,KAAL,CAAWF,QAAX,IAAuBC,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAApC;;AACA,QAAIV,IAAI,GAAG,CAAX,EAAc;AACZY,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,KAFD,MAEO;AACL,YAAMR,OAAO,GAAGS,IAAI,CAACC,KAAL,CAAYf,IAAI,GAAG,IAAR,GAAgB,EAA3B,CAAhB;AACA,YAAMI,OAAO,GAAGU,IAAI,CAACC,KAAL,CAAYf,IAAI,GAAG,IAAP,GAAc,EAAf,GAAqB,EAAhC,CAAhB;AACA,YAAMG,KAAK,GAAGW,IAAI,CAACC,KAAL,CAAYf,IAAI,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAL,GAA4B,EAAvC,CAAd;AACA,YAAME,IAAI,GAAGY,IAAI,CAACC,KAAL,CAAWf,IAAI,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAf,CAAb;AAEAC,MAAAA,OAAO,CAAC;AACNC,QAAAA,IADM;AAENC,QAAAA,KAFM;AAGNC,QAAAA,OAHM;AAINC,QAAAA;AAJM,OAAD,CAAP;AAMD;AACF,GAjB+B,EAiB7B,EAjB6B,CAAhC;AAmBAT,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,WAAW,CAAC,MAAMR,YAAY,CAAC,yBAAD,CAAnB,EAAgD,IAAhD,CAAX;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIA,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAY,IAAA,KAAK,EAAE,IAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,mBACGF,UAAU,CAACN,IAAI,CAACE,IAAN,EAAY,MAAZ,CADb,EAEGI,UAAU,CAACN,IAAI,CAACG,KAAN,EAAa,KAAb,CAFb,EAGGG,UAAU,CAACN,IAAI,CAACI,OAAN,EAAe,KAAf,CAHb,EAIGE,UAAU,CAACN,IAAI,CAACK,OAAN,EAAe,KAAf,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlDD;;GAAMN,S;;KAAAA,S;AAoDN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Slide } from 'react-awesome-reveal';\n\nconst TimeUntil = () => {\n  const [time, setTime] = useState({\n    days: '0',\n    hours: '0',\n    minutes: '0',\n    seconds: '0',\n  });\n\n  const renderItem = (time, value) => (\n    <div className='countdown_item'>\n      <div className='countdown_time'>{time}</div>\n      <div className='countdown_tag'>{value}</div>\n    </div>\n  );\n  const getTimeUntil = useCallback((deadline) => {\n    const time = Date.parse(deadline) - Date.parse(new Date());\n    if (time < 0) {\n      console.log('date passed');\n    } else {\n      const seconds = Math.floor((time / 1000) % 60);\n      const minutes = Math.floor((time / 1000 / 60) % 60);\n      const hours = Math.floor((time / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(time / (1000 * 60 * 60 * 24));\n\n      setTime({\n        days,\n        hours,\n        minutes,\n        seconds,\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    setInterval(() => getTimeUntil('Oct, 27, 2022, 16:00:00'), 1000);\n  }, [getTimeUntil]);\n\n  return (\n    <Slide left delay={1000}>\n      <div className='countdown_wrapper'>\n        <div className='countdown_top'>Event starts in</div>\n        <div className='countdown_bottom'>\n          {renderItem(time.days, 'Days')}\n          {renderItem(time.hours, 'Hrs')}\n          {renderItem(time.minutes, 'Min')}\n          {renderItem(time.seconds, 'Sec')}\n        </div>\n      </div>\n    </Slide>\n  );\n};\n\nexport default TimeUntil;\n"]},"metadata":{},"sourceType":"module"}